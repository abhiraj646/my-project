@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

body {
    font-family: 'Inter', sans-serif;
    background: linear-gradient(135deg, #0f172a 0%, #020617 100%);
    color: #e2e8f0;
    min-height: 100vh;
    overflow-x: hidden;
}

/* 2D Background Layers */
.parallax-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

.parallax-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-repeat: repeat;
    background-position: center;
    animation: float 15s ease-in-out infinite;
}

.layer-1 {
    background-image: 
        radial-gradient(circle at 20% 30%, rgba(79, 70, 229, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 70%, rgba(139, 92, 246, 0.1) 0%, transparent 50%);
}

.layer-2 {
    background-image: 
        radial-gradient(circle at 60% 20%, rgba(99, 102, 241, 0.15) 0%, transparent 40%),
        radial-gradient(circle at 30% 80%, rgba(236, 72, 153, 0.15) 0%, transparent 40%);
    animation-direction: reverse;
}

.layer-3 {
    background-image: 
        radial-gradient(circle at 40% 60%, rgba(168, 85, 247, 0.2) 0%, transparent 30%),
        radial-gradient(circle at 70% 40%, rgba(59, 130, 246, 0.2) 0%, transparent 30%);
}

/* Floating Blobs (2D only) */
.floating-element {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
    opacity: 0.6;
    filter: blur(20px);
    animation: floatElement 12s ease-in-out infinite;
}

.element-1 {
    width: 250px;
    height: 250px;
    top: 10%;
    left: 10%;
    --gradient-start: #6366f1;
    --gradient-end: #8b5cf6;
}

.element-2 {
    width: 200px;
    height: 200px;
    top: 60%;
    right: 15%;
    --gradient-start: #ec4899;
    --gradient-end: #f97316;
}

.element-3 {
    width: 220px;
    height: 220px;
    bottom: 20%;
    left: 20%;
    --gradient-start: #10b981;
    --gradient-end: #3b82f6;
}

.element-4 {
    width: 180px;
    height: 180px;
    top: 30%;
    right: 25%;
    --gradient-start: #f59e0b;
    --gradient-end: #ef4444;
}

/* 2D Grid */
.grid-2d {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        linear-gradient(rgba(99, 102, 241, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(99, 102, 241, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: gridMove 20s linear infinite;
    z-index: -2;
}

/* Animations */
@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
}

@keyframes floatElement {
    0%, 100% { transform: translateY(0) translateX(0); opacity: 0.4; }
    50% { transform: translateY(-30px) translateX(20px); opacity: 0.7; }
}

@keyframes gridMove {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
}

/* --------------------------------------------------------------------------
   Overrides to disable 3D / parallax / floating effects globally
   This intentionally hides the decorative parallax layers and disables
   any utility-based hover-scaling so the app loads in a flat, stable UI.
   These overrides are applied with !important to ensure they take
   precedence over existing rules and Tailwind utility classes.
   ------------------------------------------------------------------------ */

/* Hide decorative parallax / floating background elements */
.parallax-container,
.grid-3d,
.parallax-layer,
.floating-element {
    display: none !important;
    visibility: hidden !important;
    pointer-events: none !important;
}

/* Neutralize any card 3D transforms or shadows */
.card-3d,
.perspective-1000,
.glow-3d {
    transform: none !important;
    perspective: none !important;
    box-shadow: none !important;
}

/* Disable common Tailwind-like hover scale utilities used in templates */
.hover\:scale-105,
.hover\:scale-110,
.hover\:scale-95,
.transform {
    transform: none !important;
}

/* Make sure buttons and interactive elements don't jump on hover */
button[class*="hover:scale"],
[class*="hover:scale"] {
    transition: none !important;
}

/* If any inline styles set perspective or translateZ, force them to neutral */
[style*="translateZ"],
[style*="perspective"] {
    transform: none !important;
    perspective: none !important;
}

/* Quiz answer feedback styles */
.correct-answer {
    background-color: #10b981 !important;
    border-color: #059669 !important;
    color: white !important;
}

.incorrect-answer {
    background-color: #ef4444 !important;
    border-color: #dc2626 !important;
    color: white !important;
}

.correct-answer:hover,
.incorrect-answer:hover {
    background-color: inherit !important;
}

