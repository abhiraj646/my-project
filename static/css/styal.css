@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

body {
    font-family: 'Inter', sans-serif;
    /* darker base gradient for a deeper dark theme */
    background: linear-gradient(135deg, #04040a 0%, #000000 100%);
    color: #cbd5e1; /* slightly softer white for contrast */
    min-height: 100vh;
    overflow-x: hidden;
}

/* 2D Background Layers */
.parallax-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

.parallax-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-repeat: repeat;
    background-position: center;
    /* 3D transform support */
    transform-style: preserve-3d;
    will-change: transform, opacity;
    animation: float 18s ease-in-out infinite, parallaxDrift 60s linear infinite;
}

.layer-1 {
    background-image: 
        radial-gradient(circle at 20% 30%, rgba(79, 70, 229, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 70%, rgba(139, 92, 246, 0.1) 0%, transparent 50%);
}

.layer-2 {
    background-image: 
        radial-gradient(circle at 60% 20%, rgba(99, 102, 241, 0.15) 0%, transparent 40%),
        radial-gradient(circle at 30% 80%, rgba(236, 72, 153, 0.15) 0%, transparent 40%);
    animation-direction: reverse;
}

.layer-3 {
    background-image: 
        radial-gradient(circle at 40% 60%, rgba(168, 85, 247, 0.2) 0%, transparent 30%),
        radial-gradient(circle at 70% 40%, rgba(59, 130, 246, 0.2) 0%, transparent 30%);
}

/* 3D parallax container: set perspective and allow layers to live at different Z depths */
.parallax-3d {
    position: fixed;
    inset: 0;
    perspective: 1400px;
    transform-style: preserve-3d;
    pointer-events: none;
    z-index: -3;
}

/* Floating Blobs (2D only) */
.floating-element {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
    opacity: 0.75;
    filter: blur(20px) saturate(0.9);
    transform-style: preserve-3d;
    /* 3D float with subtle Z translation */
    animation: float3D 12s ease-in-out infinite;
}

.element-1 {
    width: 250px;
    height: 250px;
    top: 10%;
    left: 10%;
    --gradient-start: #6366f1;
    --gradient-end: #8b5cf6;
}

.element-2 {
    width: 200px;
    height: 200px;
    top: 60%;
    right: 15%;
    --gradient-start: #ec4899;
    --gradient-end: #f97316;
}

.element-3 {
    width: 220px;
    height: 220px;
    bottom: 20%;
    left: 20%;
    --gradient-start: #10b981;
    --gradient-end: #3b82f6;
}

.element-4 {
    width: 180px;
    height: 180px;
    top: 30%;
    right: 25%;
    --gradient-start: #f59e0b;
    --gradient-end: #ef4444;
}

/* Assign Z-depth helpers for layers and blobs */
.layer-1 { --z-depth: -120px; }
.layer-2 { --z-depth: -60px; }
.layer-3 { --z-depth: -20px; }
.floating-element { --z-depth: -10px; }

/* Apply translateZ to give a sense of depth. scale compensates for perspective foreshortening. */
.parallax-layer.layer-1 { transform: translateZ(var(--z-depth)) scale(1.08); }
.parallax-layer.layer-2 { transform: translateZ(var(--z-depth)) scale(1.05); }
.parallax-layer.layer-3 { transform: translateZ(var(--z-depth)) scale(1.02); }
.floating-element { transform: translateZ(var(--z-depth)) translate3d(0,0,0); }

/* 2D Grid */
.grid-2d {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        linear-gradient(rgba(99, 102, 241, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(99, 102, 241, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: gridMove 20s linear infinite;
    z-index: -2;
}

/* Animations */
@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
}

@keyframes parallaxDrift {
    0% { transform: translateX(0) translateY(0) rotateZ(0); }
    50% { transform: translateX(-6%) translateY(-2%) rotateZ(0.2deg); }
    100% { transform: translateX(0) translateY(0) rotateZ(0); }
}

@keyframes floatElement {
    0%, 100% { transform: translateY(0) translateX(0); opacity: 0.4; }
    50% { transform: translateY(-30px) translateX(20px); opacity: 0.7; }
}

@keyframes float3D {
    0% { transform: translate3d(0,0,0) rotateY(0deg); }
    25% { transform: translate3d(8px,-12px,-8px) rotateY(1deg); }
    50% { transform: translate3d(0,-24px,-12px) rotateY(-0.6deg); }
    75% { transform: translate3d(-6px,-12px,-8px) rotateY(0.8deg); }
    100% { transform: translate3d(0,0,0) rotateY(0deg); }
}

@keyframes gridMove {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
}

/* --------------------------------------------------------------------------
   Subtle 3D / depth styling
   Re-enable decorative parallax/floating layers and add tasteful 3D depth
   for cards and buttons. Effects are intentionally soft so the UI remains
   accessible and non-distracting. Most hover transforms are reduced on
   small screens via a media query.
   ------------------------------------------------------------------------ */

/* Show decorative parallax / floating background elements (2D motion retained) */
.parallax-container,
.grid-3d,
.parallax-layer,
.floating-element {
    display: block;
    visibility: visible;
    pointer-events: none; /* decorative only */
}

/* Slightly mute parallax layers so content remains readable */
.parallax-layer { opacity: 0.06; filter: saturate(0.8) brightness(0.85); }
.grid-2d { opacity: 0.03; }

/* Glass cards: subtle 3D lift and soft shadow */
.glass-effect {
    /* darker, more opaque glass so panels read as deep cards */
    background: rgba(4, 6, 12, 0.72);
    backdrop-filter: blur(6px) saturate(0.9);
    border: 1px solid rgba(255,255,255,0.03);
    box-shadow: 0 14px 40px rgba(0,0,0,0.75);
    transition: transform 220ms cubic-bezier(.2,.9,.3,1), box-shadow 220ms ease, border-color 220ms ease;
    transform-style: preserve-3d;
    will-change: transform;
    color: #e6eef8;
}

.glass-effect:hover {
    transform: translateY(-6px) translateZ(6px) rotateX(0.4deg);
    box-shadow: 0 22px 60px rgba(0,0,0,0.80);
    border-color: rgba(255,255,255,0.04);
}

/* Card 3D variant for prominent panels */
.card-3d {
    transform: translateZ(0);
    perspective: 1000px;
    transition: transform 240ms cubic-bezier(.2,.9,.3,1), box-shadow 240ms ease;
    box-shadow: 0 18px 36px rgba(0,0,0,0.70);
}

.card-3d:hover {
    transform: translateY(-8px) rotateX(2.6deg) translateZ(10px);
    box-shadow: 0 34px 72px rgba(0,0,0,0.85);
}

/* 3D flip card styles */
.flashcard {
    position: relative;
    perspective: 1200px;
    width: 100%;
    height: 100%;
}
.flashcard > .flashcard-front,
.flashcard > .flashcard-back {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    transition: transform 600ms cubic-bezier(.2,.9,.3,1), opacity 300ms ease;
}
.flashcard > .flashcard-front {
    transform: rotateY(0deg);
    z-index: 2;
}
.flashcard > .flashcard-back {
    transform: rotateY(180deg);
    z-index: 1;
}
.flashcard.flipped > .flashcard-front {
    transform: rotateY(-180deg);
    z-index: 1;
}
.flashcard.flipped > .flashcard-back {
    transform: rotateY(0deg);
    z-index: 2;
}
.flashcard .flashcard-front, .flashcard .flashcard-back {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    box-sizing: border-box;
}

/* Decorative duplicate left behind when a card is flipped */
.duplicate-card {
    transition: transform 360ms ease, opacity 360ms ease;
    border-radius: 0.75rem;
    box-shadow: 0 12px 30px rgba(0,0,0,0.6);
    transform-origin: center top;
}

/* Buttons with a gentle 3D appearance */
.btn-3d {
    background-image: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.16));
    box-shadow: 0 8px 22px rgba(0,0,0,0.65);
    transition: transform 160ms ease, box-shadow 160ms ease;
}

.btn-3d:hover {
    transform: translateY(-3px) translateZ(3px);
    box-shadow: 0 14px 36px rgba(0,0,0,0.78);
}

/* Restore small hover-scale utilities used across the markup */
.hover\:scale-105:hover { transform: scale(1.05); }
.hover\:scale-110:hover { transform: scale(1.10); }
.hover\:scale-95:hover  { transform: scale(0.95); }

/* Allow inline translateZ/perspective where used for subtle parallax */
[style*="translateZ"],
[style*="perspective"] {
    /* keep inline 3D transforms as-is */
}

/* Reduce motion and 3D on small screens for accessibility */
@media (max-width: 768px) {
    .glass-effect:hover,
    .card-3d:hover,
    .btn-3d:hover,
    .hover\:scale-105:hover,
    .hover\:scale-110:hover {
        transform: none !important;
        box-shadow: 0 8px 24px rgba(2,6,23,0.55) !important;
    }
    .parallax-layer,
    .floating-element,
    .grid-2d { display: none; }
}

/* Quiz answer feedback styles */
.correct-answer {
    background-color: #10b981 !important;
    border-color: #059669 !important;
    color: white !important;
}

.incorrect-answer {
    background-color: #ef4444 !important;
    border-color: #dc2626 !important;
    color: white !important;
}

.correct-answer:hover,
.incorrect-answer:hover {
    background-color: inherit !important;
}
